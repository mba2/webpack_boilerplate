
const webpack = require('webpack');
const merge = require('webpack-merge');
const common = require('./webpack.common.config');
const path = require('path');

const HTML = require('html-webpack-plugin');
const Extract = require('extract-text-webpack-plugin');
const Clean = require('clean-webpack-plugin');
const Uglify = require('uglifyjs-webpack-plugin');

const config = merge(common,{
	output : {
			filename : "[name].[chunkhash].js",
			path : path.resolve(__dirname, 'build')
	},

	devtool : 'source-map',

	module : {
		rules : [
			//STYLE PROCESS
			{
				test : /\.s?css$/,
				use: Extract.extract({
					fallback :  'style-loader',
					use : [
						{ loader: 'css-loader', options: { importLoaders: 1 } },
						'postcss-loader',
						"sass-loader"
					]
				})
			},
		]
	},

	plugins : [
		/** SET THIS ENVIRONMENT AS A TYPE OF `PRODUCTION` SO THIRD PARTY LIBRARIES ACT ACCORDINGLY */
		new webpack.DefinePlugin({
			'process.env.NODE_ENV': JSON.stringify('production')
		}),
		/** GENERATES HTML FILES */
		new HTML({
			template : "./src/index.html",
			minify : { collapseWhitespace : true }
		}),
		/**  THIS PLUGIN JOIN PLUGINS THAT ARE USED IN MORE THAN ONE MODULE */
		new webpack.optimize.CommonsChunkPlugin({
			names : ['vendor','manifest']
		}),
		/**  EXTRACT THE FINAL STYLESHEET */
		new Extract("app.[hash].css"),
		/**  UGLIFY THE FINAL JS CODE */
		new Uglify({ sourceMap : true }),
		/** CLEAN THE OLD CONTENT GENERATED BY A 'NPM RUN BUILD' COMMAND */
		new Clean(["build"])
  ]
});

module.exports = config;