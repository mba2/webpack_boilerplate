const webpack = require("webpack");
const path = require("path");
const HTML = require("html-webpack-plugin");
const Extract = require("extract-text-webpack-plugin");
const Clean = require('clean-webpack-plugin');
const Uglify = require('uglifyjs-webpack-plugin');

const config = {
    entry : {
        app : "./src/index.js",
        vendor :  ['jquery']
    },
    output : {
        filename : "[name].[chunkhash].js",
        path : path.resolve(__dirname, 'build')
    },

    devtool : 'source-map',
    devServer : {
        compress : true,
        // hot : true,
        // stats : "errors-only",
        // open : true
    },

    module : {
      rules : [
        //STYLES PROCESS
        {
          test : /\.s?css$/,
          use: Extract.extract({
            fallback :  'style-loader',
            use : [
              { loader: 'css-loader', options: { importLoaders: 1 } },
              'postcss-loader',
              "sass-loader"
            ]
          })
        },
         //JAVASCRIPT PROCESS
        {
          test : /\.js$/,
          use : ['babel-loader'],
          exclude : /node_modules/
        },
        // IMAGE PROCESS
        {
          test : /\.(jpeg|jpe?g|svg|png|gif)$/,
          use : [
            {
              loader:'url-loader',
              options : { limit : 40000 }
            },
            'image-webpack-loader'
          ]
        },
        // FONT PROCESS
        {
          test: /\.(woff|woff2|eot|ttf|otf)$/,
          use: [
              'file-loader'
          ]
        },
        // HTML PROCESS
			  {
				  test: /\.html$/,
				  use: ['html-loader']
        }
      ]
    },

    plugins : [
      /** SET THIS ENVIRONMENT AS A TYPE OF `PRODUCTION` SO THIRD PARTY LIBRARIES ACT ACCORDINGLY */
      new webpack.DefinePlugin({
        'process.env.NODE_ENV': JSON.stringify('production')
      }),
      /** SET ACCESS TO jQuery */
      new webpack.ProvidePlugin({
        $: 'jquery',
        jQuery: 'jquery'
      }),
      /** GENERATES HTML FILES */
      new HTML({
        template : "./src/index.html",
        minify : { collapseWhitespace : true }
      }),
      /**  THIS PLUGIN JOIN PLUGINS THAT ARE USED IN MORE THAN ONE MODULE */
      new webpack.optimize.CommonsChunkPlugin({
        names : ['vendor','manifest']
      }),
      /**  EXTRACT THE FINAL STYLESHEET */
      new Extract("app.[hash].css"),
      /**  UGLIFY THE FINAL JS CODE */
      new Uglify({ sourceMap : true }),
      /** CLEAN THE OLD CONTENT GENERATED BY A 'NPM RUN BUILD' COMMAND */
      new Clean(["build"])
  ]
}

module.exports = config;